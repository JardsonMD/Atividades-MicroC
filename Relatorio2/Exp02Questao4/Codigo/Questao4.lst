;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/04/2024 22:14:09
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF45  	GOTO        138
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_mostrar:
;Questao4.c,60 :: 		void mostrar(short i, short j){
;Questao4.c,61 :: 		PortD = cont[j];
0x001C	0x0E15      	MOVLW       _cont
0x001E	0x6EE9      	MOVWF       FSR0L 
0x0020	0x0E00      	MOVLW       hi_addr(_cont)
0x0022	0x6EEA      	MOVWF       FSR0L+1 
0x0024	0x5024      	MOVF        FARG_mostrar_j, 0 
0x0026	0x26E9      	ADDWF       FSR0L, 1 
0x0028	0x0E00      	MOVLW       0
0x002A	0xBE24      	BTFSC       FARG_mostrar_j, 7 
0x002C	0x0EFF      	MOVLW       255
0x002E	0x22EA      	ADDWFC      FSR0L+1, 1 
0x0030	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;Questao4.c,62 :: 		RE0_bit = 1;
0x0034	0x8084      	BSF         RE0_bit, BitPos(RE0_bit+0) 
;Questao4.c,63 :: 		RE2_bit = 0;
0x0036	0x9484      	BCF         RE2_bit, BitPos(RE2_bit+0) 
;Questao4.c,64 :: 		delay_ms(10);
0x0038	0x0E41      	MOVLW       65
0x003A	0x6E0C      	MOVWF       R12, 0
0x003C	0x0EEE      	MOVLW       238
0x003E	0x6E0D      	MOVWF       R13, 0
L_mostrar15:
0x0040	0x2E0D      	DECFSZ      R13, 1, 0
0x0042	0xD7FE      	BRA         L_mostrar15
0x0044	0x2E0C      	DECFSZ      R12, 1, 0
0x0046	0xD7FC      	BRA         L_mostrar15
0x0048	0x0000      	NOP
;Questao4.c,65 :: 		PortD = cont[i];
0x004A	0x0E15      	MOVLW       _cont
0x004C	0x6EE9      	MOVWF       FSR0L 
0x004E	0x0E00      	MOVLW       hi_addr(_cont)
0x0050	0x6EEA      	MOVWF       FSR0L+1 
0x0052	0x5023      	MOVF        FARG_mostrar_i, 0 
0x0054	0x26E9      	ADDWF       FSR0L, 1 
0x0056	0x0E00      	MOVLW       0
0x0058	0xBE23      	BTFSC       FARG_mostrar_i, 7 
0x005A	0x0EFF      	MOVLW       255
0x005C	0x22EA      	ADDWFC      FSR0L+1, 1 
0x005E	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;Questao4.c,66 :: 		RE0_bit = 0;
0x0062	0x9084      	BCF         RE0_bit, BitPos(RE0_bit+0) 
;Questao4.c,67 :: 		RE2_bit = 1;
0x0064	0x8484      	BSF         RE2_bit, BitPos(RE2_bit+0) 
;Questao4.c,68 :: 		delay_ms(10);
0x0066	0x0E41      	MOVLW       65
0x0068	0x6E0C      	MOVWF       R12, 0
0x006A	0x0EEE      	MOVLW       238
0x006C	0x6E0D      	MOVWF       R13, 0
L_mostrar16:
0x006E	0x2E0D      	DECFSZ      R13, 1, 0
0x0070	0xD7FE      	BRA         L_mostrar16
0x0072	0x2E0C      	DECFSZ      R12, 1, 0
0x0074	0xD7FC      	BRA         L_mostrar16
0x0076	0x0000      	NOP
;Questao4.c,69 :: 		}
L_end_mostrar:
0x0078	0x0012      	RETURN      0
; end of _mostrar
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x007A	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x007C	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0080	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0082	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0084	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0086	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0088	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x008A	0x0E3F      	MOVLW       63
0x008C	0x6E15      	MOVWF       _cont 
0x008E	0x0E06      	MOVLW       6
0x0090	0x6E16      	MOVWF       22 
0x0092	0x0E5B      	MOVLW       91
0x0094	0x6E17      	MOVWF       23 
0x0096	0x0E4F      	MOVLW       79
0x0098	0x6E18      	MOVWF       24 
0x009A	0x0E66      	MOVLW       102
0x009C	0x6E19      	MOVWF       25 
0x009E	0x0E6D      	MOVLW       109
0x00A0	0x6E1A      	MOVWF       26 
0x00A2	0x0E7D      	MOVLW       125
0x00A4	0x6E1B      	MOVWF       27 
0x00A6	0x0E07      	MOVLW       7
0x00A8	0x6E1C      	MOVWF       28 
0x00AA	0x0E7F      	MOVLW       127
0x00AC	0x6E1D      	MOVWF       29 
0x00AE	0x0E6F      	MOVLW       111
0x00B0	0x6E1E      	MOVWF       30 
;Questao4.c,8 :: 		void main() {
;Questao4.c,9 :: 		unsigned short x = 0, i = 0, j = 0, y = 0, cont1 = 0;
0x00B2	0x6A1F      	CLRF        main_i_L0 
0x00B4	0x6A20      	CLRF        main_j_L0 
0x00B6	0x6A21      	CLRF        main_y_L0 
0x00B8	0x6A22      	CLRF        main_cont1_L0 
;Questao4.c,10 :: 		TrisB = 0xFF;
0x00BA	0x0EFF      	MOVLW       255
0x00BC	0x6E93      	MOVWF       TRISB 
;Questao4.c,11 :: 		TrisE = 0x00;
0x00BE	0x6A96      	CLRF        TRISE 
;Questao4.c,12 :: 		TrisD = 0x00;
0x00C0	0x6A95      	CLRF        TRISD 
;Questao4.c,13 :: 		PortB = 0xFF;
0x00C2	0x0EFF      	MOVLW       255
0x00C4	0x6E81      	MOVWF       PORTB 
;Questao4.c,14 :: 		PortD = 0x00;
0x00C6	0x6A83      	CLRF        PORTD 
;Questao4.c,15 :: 		CMCON = 7;
0x00C8	0x0E07      	MOVLW       7
0x00CA	0x6EB4      	MOVWF       CMCON 
;Questao4.c,16 :: 		ADCON1 = 0x0F;
0x00CC	0x0E0F      	MOVLW       15
0x00CE	0x6EC1      	MOVWF       ADCON1 
;Questao4.c,17 :: 		RBPU_bit = 0;
0x00D0	0x9EF1      	BCF         RBPU_bit, BitPos(RBPU_bit+0) 
;Questao4.c,18 :: 		RE0_bit = 1;
0x00D2	0x8084      	BSF         RE0_bit, BitPos(RE0_bit+0) 
;Questao4.c,19 :: 		RE2_bit = 1;
0x00D4	0x8484      	BSF         RE2_bit, BitPos(RE2_bit+0) 
;Questao4.c,21 :: 		while(1){
L_main0:
;Questao4.c,22 :: 		mostrar(i, j);
0x00D6	0xF023C01F  	MOVFF       main_i_L0, FARG_mostrar_i
0x00DA	0xF024C020  	MOVFF       main_j_L0, FARG_mostrar_j
0x00DE	0xDF9E      	RCALL       _mostrar
;Questao4.c,23 :: 		cont1++;
0x00E0	0x2A22      	INCF        main_cont1_L0, 1 
;Questao4.c,24 :: 		if(BOT1 == 0){
0x00E2	0xB081      	BTFSC       INT0_bit, BitPos(INT0_bit+0) 
0x00E4	0xD002      	BRA         L_main2
;Questao4.c,25 :: 		y = 1;
0x00E6	0x0E01      	MOVLW       1
0x00E8	0x6E21      	MOVWF       main_y_L0 
;Questao4.c,26 :: 		}
L_main2:
;Questao4.c,27 :: 		if(BOT2 == 0){
0x00EA	0xB281      	BTFSC       INT1_bit, BitPos(INT1_bit+0) 
0x00EC	0xD002      	BRA         L_main3
;Questao4.c,28 :: 		y = 2;
0x00EE	0x0E02      	MOVLW       2
0x00F0	0x6E21      	MOVWF       main_y_L0 
;Questao4.c,29 :: 		}
L_main3:
;Questao4.c,30 :: 		if(BOT3 == 0){
0x00F2	0xB481      	BTFSC       INT2_bit, BitPos(INT2_bit+0) 
0x00F4	0xD002      	BRA         L_main4
;Questao4.c,31 :: 		y = 3;
0x00F6	0x0E03      	MOVLW       3
0x00F8	0x6E21      	MOVWF       main_y_L0 
;Questao4.c,32 :: 		}
L_main4:
;Questao4.c,33 :: 		if(i == 10){
0x00FA	0x501F      	MOVF        main_i_L0, 0 
0x00FC	0x0A0A      	XORLW       10
0x00FE	0xE102      	BNZ         L_main5
;Questao4.c,34 :: 		j++;
0x0100	0x2A20      	INCF        main_j_L0, 1 
;Questao4.c,35 :: 		i = 0;
0x0102	0x6A1F      	CLRF        main_i_L0 
;Questao4.c,36 :: 		}
L_main5:
;Questao4.c,37 :: 		if(j == 10){
0x0104	0x5020      	MOVF        main_j_L0, 0 
0x0106	0x0A0A      	XORLW       10
0x0108	0xB4D8      	BTFSC       STATUS, 2 
;Questao4.c,38 :: 		j = 0;
0x010A	0x6A20      	CLRF        main_j_L0 
;Questao4.c,39 :: 		}
L_main6:
;Questao4.c,40 :: 		if(y == 1){
0x010C	0x5021      	MOVF        main_y_L0, 0 
0x010E	0x0A01      	XORLW       1
0x0110	0xE106      	BNZ         L_main7
;Questao4.c,41 :: 		if(cont1 == 50){
0x0112	0x5022      	MOVF        main_cont1_L0, 0 
0x0114	0x0A32      	XORLW       50
0x0116	0xE102      	BNZ         L_main8
;Questao4.c,42 :: 		i++;
0x0118	0x2A1F      	INCF        main_i_L0, 1 
;Questao4.c,43 :: 		cont1 = 0;
0x011A	0x6A22      	CLRF        main_cont1_L0 
;Questao4.c,44 :: 		}
L_main8:
;Questao4.c,45 :: 		}else if(y == 2){
0x011C	0xD011      	BRA         L_main9
L_main7:
0x011E	0x5021      	MOVF        main_y_L0, 0 
0x0120	0x0A02      	XORLW       2
0x0122	0xE106      	BNZ         L_main10
;Questao4.c,46 :: 		if(cont1 == 25){
0x0124	0x5022      	MOVF        main_cont1_L0, 0 
0x0126	0x0A19      	XORLW       25
0x0128	0xE102      	BNZ         L_main11
;Questao4.c,47 :: 		i++;
0x012A	0x2A1F      	INCF        main_i_L0, 1 
;Questao4.c,48 :: 		cont1 = 0;
0x012C	0x6A22      	CLRF        main_cont1_L0 
;Questao4.c,49 :: 		}
L_main11:
;Questao4.c,50 :: 		}else if(y == 3){
0x012E	0xD008      	BRA         L_main12
L_main10:
0x0130	0x5021      	MOVF        main_y_L0, 0 
0x0132	0x0A03      	XORLW       3
0x0134	0xE105      	BNZ         L_main13
;Questao4.c,51 :: 		if(cont1 == 12){
0x0136	0x5022      	MOVF        main_cont1_L0, 0 
0x0138	0x0A0C      	XORLW       12
0x013A	0xE102      	BNZ         L_main14
;Questao4.c,52 :: 		i++;
0x013C	0x2A1F      	INCF        main_i_L0, 1 
;Questao4.c,53 :: 		cont1 = 0;
0x013E	0x6A22      	CLRF        main_cont1_L0 
;Questao4.c,54 :: 		}
L_main14:
;Questao4.c,55 :: 		}
L_main13:
L_main12:
L_main9:
;Questao4.c,56 :: 		}
0x0140	0xD7CA      	BRA         L_main0
;Questao4.c,58 :: 		}
L_end_main:
0x0142	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [94]    _mostrar
0x007A      [16]    ___CC2DW
0x008A     [186]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [10]    _cont
0x001F       [1]    main_i_L0
0x0020       [1]    main_j_L0
0x0021       [1]    main_y_L0
0x0022       [1]    main_cont1_L0
0x0023       [1]    FARG_mostrar_i
0x0024       [1]    FARG_mostrar_j
0x0F81       [0]    INT0_bit
0x0F81       [1]    PORTB
0x0F81       [0]    INT2_bit
0x0F81       [0]    INT1_bit
0x0F83       [1]    PORTD
0x0F84       [0]    RE2_bit
0x0F84       [0]    RE0_bit
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [0]    RBPU_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
