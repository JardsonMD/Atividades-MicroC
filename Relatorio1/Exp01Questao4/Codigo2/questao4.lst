;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21/03/2024 21:36:04
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF0E  	GOTO        28
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
;questao4.c,1 :: 		void main() {
;questao4.c,3 :: 		int y = 0;
0x001C	0x6A15      	CLRF        main_y_L0 
0x001E	0x6A16      	CLRF        main_y_L0+1 
;questao4.c,4 :: 		TrisD = 0x00;
0x0020	0x6A95      	CLRF        TRISD 
;questao4.c,5 :: 		PortD = 0xFF;
0x0022	0x0EFF      	MOVLW       255
0x0024	0x6E83      	MOVWF       PORTD 
;questao4.c,6 :: 		ADCON1 = 0x0F;
0x0026	0x0E0F      	MOVLW       15
0x0028	0x6EC1      	MOVWF       ADCON1 
;questao4.c,7 :: 		CMCON = 7;
0x002A	0x0E07      	MOVLW       7
0x002C	0x6EB4      	MOVWF       CMCON 
;questao4.c,8 :: 		RBPU_bit = 0;
0x002E	0x9EF1      	BCF         RBPU_bit, BitPos(RBPU_bit+0) 
;questao4.c,9 :: 		x = ~PortD;
0x0030	0x1C83      	COMF        PORTD, 0 
0x0032	0x6E02      	MOVWF       R2 
;questao4.c,10 :: 		while(1){
L_main0:
;questao4.c,11 :: 		if(PortD == 0x00){
0x0034	0x5083      	MOVF        PORTD, 0 
0x0036	0x0A00      	XORLW       0
0x0038	0xE105      	BNZ         L_main2
;questao4.c,12 :: 		y = 1;
0x003A	0x0E01      	MOVLW       1
0x003C	0x6E15      	MOVWF       main_y_L0 
0x003E	0x0E00      	MOVLW       0
0x0040	0x6E16      	MOVWF       main_y_L0+1 
;questao4.c,13 :: 		}else if(PortD == 0xFF){
0x0042	0xD005      	BRA         L_main3
L_main2:
0x0044	0x5083      	MOVF        PORTD, 0 
0x0046	0x0AFF      	XORLW       255
0x0048	0xE102      	BNZ         L_main4
;questao4.c,14 :: 		y = 0;
0x004A	0x6A15      	CLRF        main_y_L0 
0x004C	0x6A16      	CLRF        main_y_L0+1 
;questao4.c,15 :: 		}
L_main4:
L_main3:
;questao4.c,16 :: 		if(y == 0){
0x004E	0x0E00      	MOVLW       0
0x0050	0x1816      	XORWF       main_y_L0+1, 0 
0x0052	0xE102      	BNZ         L__main12
0x0054	0x0E00      	MOVLW       0
0x0056	0x1815      	XORWF       main_y_L0, 0 
L__main12:
0x0058	0xE11D      	BNZ         L_main5
;questao4.c,17 :: 		if(PortD == 0xFF){
0x005A	0x5083      	MOVF        PORTD, 0 
0x005C	0x0AFF      	XORLW       255
0x005E	0xB4D8      	BTFSC       STATUS, 2 
;questao4.c,18 :: 		x = 0x00;
0x0060	0x6A02      	CLRF        R2 
;questao4.c,19 :: 		}
L_main6:
;questao4.c,20 :: 		delay_ms(300);
0x0062	0x0E08      	MOVLW       8
0x0064	0x6E0B      	MOVWF       R11, 0
0x0066	0x0E9D      	MOVLW       157
0x0068	0x6E0C      	MOVWF       R12, 0
0x006A	0x0E05      	MOVLW       5
0x006C	0x6E0D      	MOVWF       R13, 0
L_main7:
0x006E	0x2E0D      	DECFSZ      R13, 1, 0
0x0070	0xD7FE      	BRA         L_main7
0x0072	0x2E0C      	DECFSZ      R12, 1, 0
0x0074	0xD7FC      	BRA         L_main7
0x0076	0x2E0B      	DECFSZ      R11, 1, 0
0x0078	0xD7FA      	BRA         L_main7
0x007A	0x0000      	NOP
0x007C	0x0000      	NOP
;questao4.c,21 :: 		x += 0x80;
0x007E	0x0E80      	MOVLW       128
0x0080	0x2402      	ADDWF       R2, 0 
0x0082	0x6E01      	MOVWF       R1 
0x0084	0xF002C001  	MOVFF       R1, R2
;questao4.c,22 :: 		PortD = ~x;
0x0088	0x1C01      	COMF        R1, 0 
0x008A	0x6E83      	MOVWF       PORTD 
;questao4.c,23 :: 		x = x >> 1;
0x008C	0xF002C001  	MOVFF       R1, R2
0x0090	0x3202      	RRCF        R2, 1 
0x0092	0x9E02      	BCF         R2, 7 
;questao4.c,24 :: 		}
L_main5:
;questao4.c,25 :: 		if(y == 1){
0x0094	0x0E00      	MOVLW       0
0x0096	0x1816      	XORWF       main_y_L0+1, 0 
0x0098	0xE102      	BNZ         L__main13
0x009A	0x0E01      	MOVLW       1
0x009C	0x1815      	XORWF       main_y_L0, 0 
L__main13:
0x009E	0xE11B      	BNZ         L_main8
;questao4.c,26 :: 		delay_ms(300);
0x00A0	0x0E08      	MOVLW       8
0x00A2	0x6E0B      	MOVWF       R11, 0
0x00A4	0x0E9D      	MOVLW       157
0x00A6	0x6E0C      	MOVWF       R12, 0
0x00A8	0x0E05      	MOVLW       5
0x00AA	0x6E0D      	MOVWF       R13, 0
L_main9:
0x00AC	0x2E0D      	DECFSZ      R13, 1, 0
0x00AE	0xD7FE      	BRA         L_main9
0x00B0	0x2E0C      	DECFSZ      R12, 1, 0
0x00B2	0xD7FC      	BRA         L_main9
0x00B4	0x2E0B      	DECFSZ      R11, 1, 0
0x00B6	0xD7FA      	BRA         L_main9
0x00B8	0x0000      	NOP
0x00BA	0x0000      	NOP
;questao4.c,27 :: 		if(PortD == 0x00){
0x00BC	0x5083      	MOVF        PORTD, 0 
0x00BE	0x0A00      	XORLW       0
0x00C0	0xB4D8      	BTFSC       STATUS, 2 
;questao4.c,28 :: 		x = 0x00;
0x00C2	0x6A02      	CLRF        R2 
;questao4.c,29 :: 		}
L_main10:
;questao4.c,30 :: 		x += 1;
0x00C4	0x2A02      	INCF        R2, 1 
;questao4.c,31 :: 		PortD = x;
0x00C6	0xFF83C002  	MOVFF       R2, PORTD
;questao4.c,32 :: 		x = x << 1;
0x00CA	0x3602      	RLCF        R2, 1 
0x00CC	0x9002      	BCF         R2, 0 
;questao4.c,33 :: 		y = 1;
0x00CE	0x0E01      	MOVLW       1
0x00D0	0x6E15      	MOVWF       main_y_L0 
0x00D2	0x0E00      	MOVLW       0
0x00D4	0x6E16      	MOVWF       main_y_L0+1 
;questao4.c,34 :: 		}
L_main8:
;questao4.c,36 :: 		}
0x00D6	0xD7AE      	BRA         L_main0
;questao4.c,37 :: 		}
L_end_main:
0x00D8	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C     [190]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0002       [1]    main_x_L0
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    main_y_L0
0x0F83       [1]    PORTD
0x0F95       [1]    TRISD
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [0]    RBPU_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
